generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  email        String       @unique
  name         String?
  image        String?
  role         Role         @default(VIEWER)
  active       Boolean      @default(true)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  password     String?
  auditLogs    AuditLog[]
  syncStatuses SyncStatus[]

  @@index([email])
  @@index([role])
}

model StudentResponse {
  id                         String    @id @default(cuid())
  timestamp                  DateTime
  email                      String
  module                     String
  edition                    String
  clarezaObjetivos           Int?
  articulacaoModulos         Int?
  utilizacaoPlataformas      Int?
  contributoAquisicao        Int?
  apreciacaoGlobalDisciplina Int?
  estruturacaoAulas          Int?
  exposicaoConteudos         Int?
  dominioConteudos           Int?
  cumprimentoHorario         Int?
  disponibilidadeApoio       Int?
  estimuloParticipacao       Int?
  apreciacaoGlobalDocente    Int?
  apoioEquipaExecutiva       Int?
  organizacaoCondicoesCurso  Int?
  instalacoesEquipamentos    Int?
  comentarios                String?
  comentariosDeleted         Boolean   @default(false)
  gsheetsRowIndex            Int?
  lastSyncedAt               DateTime?
  createdAt                  DateTime  @default(now())
  updatedAt                  DateTime  @updatedAt

  @@unique([email, module, edition])
  @@index([module, edition])
  @@index([email])
}

model AuditLog {
  id        String   @id @default(cuid())
  userId    String?
  action    String
  tableName String?
  recordId  String?
  oldValue  String?
  newValue  String?
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])

  @@index([createdAt])
  @@index([userId])
}

model SyncStatus {
  id            String         @id @default(cuid())
  startedAt     DateTime
  completedAt   DateTime?
  status        SyncStatusEnum
  rowsProcessed Int            @default(0)
  rowsAdded     Int            @default(0)
  rowsUpdated   Int            @default(0)
  errorMessage  String?
  triggeredById String?
  createdAt     DateTime       @default(now())
  triggeredBy   User?          @relation(fields: [triggeredById], references: [id])

  @@index([startedAt])
  @@index([status])
}

enum Role {
  ADMIN
  TEACHER
  VIEWER
}

enum SyncStatusEnum {
  RUNNING
  SUCCESS
  FAILED
}
